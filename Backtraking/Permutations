class Solution {
public:
    void helper(vector<int>&nums, vector<vector<int>>&ans, vector<int>&ds, int freq[]){
        //base case
        if(ds.size() == nums.size()){
            ans.push_back(ds);
            return;
        }
        
        //induction
        for(int i=0; i<nums.size(); i++){ //as at each step we will check each element fromstarting to end
            if(freq[i] == 0){
                ds.push_back(nums[i]);
                freq[i] = 1;
                helper(nums, ans, ds, freq);
                freq[i] = 0;
                ds.pop_back();
            }           
        }
    }
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>>ans;
        vector<int>ds;
        int freq[nums.size()];
        for(int i=0; i<nums.size(); i++){
            freq[i] = 0;
        }
        helper(nums, ans, ds, freq);
        return ans;
    }
};
