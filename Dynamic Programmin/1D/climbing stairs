class Solution {
public:
    // int funRec(int ind){
    //     //base case 
    //     if(ind == 0 || ind == 1)
    //         return 1;
        
    //     int one = funRec(ind-1);
    //     int two = funRec(ind-2);

    //     return one + two;
    // }
    int climbStairs(int n) {
       // return funRec(n);

       //tabulation
       vector<int>dp(n+1);

       //base case
       dp[0] = 1;
       dp[1] = 1;

       for(int i=2; i<=n; i++){
           dp[i] = dp[i-1] + dp[i-2];
       }

       return dp[n];
       
       //space optimization, tc:O(n), sc:(1)
    int prev1 = 1;
    int prev2 = 1;

    for(int i=2; i<=n; i++){
        int curr_i = prev1 + prev2;
        prev2 = prev1;
        prev1 = curr_i;
    }

    return prev1;
    }
};
