class Solution {
    private:
        void dfs(int node, int vis[], vector<int>adj[], vector<int>&ans){
            vis[node] = 1;
            ans.push_back(node);
            
            for(auto it : adj[node]){
                if(!vis[it]){
                    vis[it] = 1;
                    dfs(it, vis, adj, ans);
                }
            }
        }
  public:
    // Function to return a list containing the DFS traversal of the graph.
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        int vis[V] = {0};
        int start = 0;
        //vis[0] = 1;
        vector<int>ans;
        dfs(start,vis, adj, ans);
        return ans;
    }
};
