class Solution
{
	public:
	//Function to find sum of weights of edges of the Minimum Spanning Tree.
    int spanningTree(int V, vector<vector<int>> adj[])
    {
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>>pq;
        vector<int>vis(V, 0);
        //{wt, node}
        pq.push({0, 0});
        int sum = 0;
        
        while(!pq.empty()){
            auto it = pq.top();
            int node = it.second;
            int wt = it.first;
            pq.pop();
            
            //when node is part of minimum spanning tree / current node is visited, then skip that node 
            //add the wight in final sum
            if(vis[node] == 1) continue;
            
            vis[node] = 1;
            sum += wt;
            
            //iterate adjacant node
            for(auto it : adj[node]){
                int adjNode = it[0];
                int edW = it[1];
                
                //when node is not visited
                if(!vis[adjNode]){
                    pq.push({edW, adjNode});
                }
            }
        }
        
        return sum;
    }
};
