class Solution {
public:
    //key point: find the xor value for each row with every column and similarly for each column with every column
    int kthLargestValue(vector<vector<int>>& matrix, int k) {
        priority_queue<int, vector<int>, greater<int>>minh;
        
        //for each row
        for(int i=0; i<matrix.size(); i++){
            for(int j=1; j<matrix[0].size(); j++){
                matrix[i][j] ^=matrix[i][j-1];
            }
        }
        
        //for each column
        for(int i=0; i<matrix[0].size(); i++){
            for(int j=1; j<matrix.size(); j++){
                matrix[j][i] ^=matrix[j-1][i];
            }
        }
        
        for(int i=0; i<matrix.size(); i++){
            for(int j=0; j<matrix[0].size(); j++){
                minh.push(matrix[i][j]);
                if(minh.size() > k) minh.pop();
            }
        }
        return minh.top();
    }
};
