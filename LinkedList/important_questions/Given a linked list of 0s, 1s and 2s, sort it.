/***Companies: amazon, makemytrip, microsoft****/
/***GFG***/

class Solution
{
    public:
    //Function to sort a linked list of 0s, 1s and 2s.
    Node* segregate(Node *head) {
        
        // Add code here
        if(head==NULL){
            return head;
        }
        Node* zeroD = new Node(0);
        Node* oneD = new Node(0);
        Node* twoD = new Node(0);
        
        Node* zero = zeroD, *one = oneD, *two = twoD;
        
        Node* curr = head;
        while(curr!=NULL){
            if(curr->data == 0){
                zero->next = curr;
                zero = curr;
            }
            
            else if(curr->data == 1){
                one->next = curr;
                one = curr;
            }
            
            else if(curr->data == 2){
                two->next = curr;
                two = curr;
            }
            curr = curr->next;
        }
        
        zero->next = (oneD->next) ? (oneD->next) : (twoD->next);
        one->next = twoD->next;
        two->next = NULL;
        
        head = zeroD->next;
        delete zeroD;
       delete oneD;
       delete twoD;
       
        return head;
        
    }
};
