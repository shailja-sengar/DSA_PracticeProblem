/*** companies: accolite, amazon, microsoft, paytm****/
/***GFG***/

class Solution{
    
  public:
  
  Node* findMid(Node* head){
      Node* slow = head;
      Node* fast = head->next;
       while(fast!=NULL && fast->next!=NULL){
           slow= slow->next;
            fast = fast->next->next;
       }
       
       return slow;
  }
  
  Node* merge(Node* left, Node* right){
      if(left==NULL) return right;
      if(right==NULL) return left;
      
      Node* res = new Node(0);
      Node* temp = res;
      
      while(left!=NULL && right!=NULL){
          if(left->data < right->data){
              temp->next = left;
              temp = temp->next;
              left = left->next;
          }
          else{
              temp->next = right;
              temp = temp->next;
              right = right->next;
          }
      }
      if(left!=NULL){
          temp->next = left;
          temp = temp->next;
          left = left->next;
      }
      else{
          temp->next = right;
          temp = temp->next;
          right= right->next;
      }
      return res->next;
  }
    //Function to sort the given linked list using Merge Sort.
    Node* mergeSort(Node* head) {
        // your code here
        
        if(head==NULL || head->next==NULL){
            return head;
        }
        Node* mid = findMid(head);
        
        Node* left = head;
        Node* right = mid->next;
        mid->next = NULL;
        
        left = mergeSort(left);
        right = mergeSort(right);
        
        Node* ans = merge(left, right);
        
        return ans;
    }
};
