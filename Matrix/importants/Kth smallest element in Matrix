int kthSmallest(int mat[MAX][MAX], int n, int k)
{
  //optimize approach would be using binary search in o(n log n) given solution's tc: o(n log n) but space complexity: o(n)
  priority_queue<int>maxh;
  for(int i=0; i<n; i++){
      for(int j=0; j<n; j++){
          maxh.push(mat[i][j]);
          
          if(maxh.size() > k){
              maxh.pop();
          }
      }
  }
  
  return maxh.top();
}
