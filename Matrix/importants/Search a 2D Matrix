class Solution {
public:
    //key point: apply binary search on 2d array, bcoz when we convert it into a linear array this would be a sorted linear array as it is row wise sorted
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int row = matrix.size();
        int col = matrix[0].size();
        
        int start = 0;
        int end = row * col-1;     // gives theh last index in linear array
        int mid = start + (end-start)/2; // this mid is pointing out the index of linear array not in the given matrix
        
        while(start <= end){
            int element = matrix[mid/col][mid%col];  //to find the index mid element of linear array into matrix, mid/col gives the row index and mid%col gives the column index
                
                if(element == target){
                    return 1;
                }
            
            else if(element < target){
                start = mid + 1;
            }
            else{
                end = mid - 1; 
            }
            mid = start + (end-start)/2;
            
        }
        return 0;
    }
};
