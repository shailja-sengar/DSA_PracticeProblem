class Solution {
public:
    
    void helper(TreeNode* root, int target, vector<int>&ds, vector<vector<int>>&ans){
        if(root == NULL){
            return;
        }
        ds.push_back(root->val);
        
        //leaf node condition
        if(root->left == NULL && root->right == NULL && target == root->val){
            ans.push_back(ds);
            ds.pop_back();
            return;
        }
       // ds.push_back(root->val);
         helper(root->left, target-root->val, ds, ans);
        //ds.pop_back();
        helper(root->right, target - root->val, ds, ans);
        ds.pop_back();
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>>ans;
        vector<int>ds;
        
        //if(root == NULL) return ans;
        helper(root, targetSum, ds, ans);
        
        return ans;
    }
};
