class Solution {
public:
    // int funRec(int i, int j){
    //     //base case
    //     if(i==0 && j==0) return 1;
    //     if(i < 0 || j<0) return 0;
        
    //     //go up and left direction 
    //     int up = funRec(i-1, j);
    //     int left = funRec(i, j-1);

    //     return up+left;
    // }

    // int funMemo(int i, int j, vector<vector<int>>&dp){
    //     //base case
    //     if(i==0 && j==0) return 1;
    //     if(i<0 || j<0) return 0;

    //     if(dp[i][j] != -1) return dp[i][j];

    //     int up = funMemo(i-1, j, dp);
    //     int left = funMemo(i, j-1, dp);

    //     return dp[i][j] = up+left;
    // }

    
    int uniquePaths(int m, int n) {
        //return funRec(m-1, n-1);
       vector<vector<int>>dp(m, vector<int>(n, -1));
        return funMemo(m-1, n-1, dp);
        
    }
};
