class Solution {
public:
    //using sliding window
    int countGoodSubstrings(string s) {
        int ans = 0;
        int size = s.size();
        unordered_map<char, int>ump;
        int i=0, j=0;
        
        while(j < size){
            //Step 1: intital calucaltion
            ump[s[j]]++;      //store the count of current character
            
            //Step 2: first reach till the given window size
            if((j-i+1) < 3){           // when window size is less than 3
                j++;
            }
            
            //Step 3: when hit the window size 
            else if((j-i+1) == 3){ // when hit the window size
                
                //Step 3.1: caluclation to find the answer
                if(ump.size() == 3){        // if map has 3 key, it mean all they have count 1 so increase ans
                    ans++;
                }
                
                //Step 3.2: calculation before sliding the window
               ump[s[i]]--;               // decrease the count of current window's first char
                if(ump[s[i]] == 0){        // if count became 0 so remove it from map
                    ump.erase(s[i]);
                }
                i++, j++;
            }
        }
        
        return ans;
    }
};
