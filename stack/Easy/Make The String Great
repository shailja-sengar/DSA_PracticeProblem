class Solution {
public:
    string makeGood(string s) {
        stack<char>st;
        for(int i=0; i<s.size(); i++){
            if(isupper(s[i])){
                char c = tolower(s[i]);
                if(st.empty()){
                    st.push(s[i]);
                }
                
                 else if(!st.empty()){
                   if(st.top()==c){
                       st.pop();
                   }
                   
                   else if(st.top() != s[i] || st.top() == s[i]){
                       st.push(s[i]);
                   }     
                } 
            }
            
            else{
                
                char c = toupper(s[i]);
                if(st.empty()){
                    st.push(s[i]);
                }
                
               else if(!st.empty()){
                   if(st.top()==c){
                       st.pop();
                   }
                   
                   else if(st.top() != s[i] || st.top() == s[i]){
                       st.push(s[i]);
                   }     
                }      
            }
           
           
        }
        string ans;
        while(!st.empty()){
            ans.push_back(st.top());
            st.pop();
        }
        reverse(ans.begin(), ans.end());
        return ans;
    }
};
