class Solution {
public:
    int carFleet(int target, vector<int>& position, vector<int>& speed) {
        stack<float>fleet;
        vector<pair<int, float>>position_time;
        
        for(int i=0; i<position.size(); i++){
            //storing current car's position with it's time left to reach the target
            position_time.push_back({position[i], float(target - position[i])/speed[i]});
        }
        
        sort(position_time.begin(), position_time.end());
        
        for(int i=0; i<position.size(); i++){
            float fleet_i = position_time[i].second;
            
            while(fleet.size() && (fleet_i >= fleet.top())){
                fleet.pop();
            }
            //push the time left in the stack and maintain the decreasing order
            fleet.push(fleet_i);
        }
      return fleet.size();
    }
};
