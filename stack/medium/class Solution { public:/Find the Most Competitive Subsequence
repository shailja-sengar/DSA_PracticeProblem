class Solution {
public:
    //key point: Monotonic increasing stack and to maintain the stacl size use the condiotion
    vector<int> mostCompetitive(vector<int>& nums, int k) {
        stack<int>st;
        vector<int>ans;
        int n = nums.size();
        for(int i=0; i<nums.size(); i++){
            while(!st.empty() && st.top() > nums[i]  && (n-i-1 >= k-st.size())){
                st.pop();
            }
            if(st.size() < k){
                    st.push(nums[i]);
            }
               
        }
              
        while(!st.empty()){
            ans.push_back(st.top());
            st.pop();
        }
        reverse(ans.begin(), ans.end());
        return ans;
    }
};
